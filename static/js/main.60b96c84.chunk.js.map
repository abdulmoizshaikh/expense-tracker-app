{"version":3,"sources":["components/BalanceInquiry/BalanceInquiry.js","containers/AddTransaction/AddTransaction.js","components/TransactionHistory/TransactionHistory.js","components/IncomeExpenseCard/IncomeExpenseCard.js","App.js","reportWebVitals.js","index.js"],"names":["BalanceInquiry","RootContext","Consumer","state","income","totalIncome","expense","totalExpense","className","Component","AddTransaction","useState","text","setText","amount","setAmount","useContext","transaction","allTransactions","setAllTransaction","setTotalIncome","setTotalExpense","updateIncomeExpense","parseFloat","type","value","onChange","e","target","id","onClick","_id","length","name","payload","localStorage","setItem","JSON","stringify","TransactionHistory","TransactionCard","props","splitedValue","split","map","_transaction","IncomeExpenseCard","createContext","App","useEffect","_allTransactions","parse","getItem","item","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","ReactDOM","render","StrictMode","debugContextDevtool","debugReducer","debugContext"],"mappings":"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","file":"static/js/main.60b96c84.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { RootContext } from \"../../App\";\nimport \"./BalanceInquiry.css\";\n\n/**\n *  context using in class component\n */\n\nclass BalanceInquiry extends Component {\n  render() {\n    return (\n      <RootContext.Consumer>\n        {(state) => {\n          // nested array destructuring with default values\n          const {\n            income: [totalIncome, setTotalIncome],\n            expense: [totalExpense, setTotalExpense],\n          } = state;\n          return (\n            <div className=\"container\">\n              <span className=\"text\">Your balance</span>\n              <br />\n              <span className=\"text\">\n                $\n                {totalIncome + totalExpense !== 0\n                  ? totalIncome + totalExpense + \".00\"\n                  : totalIncome + totalExpense}\n              </span>\n            </div>\n          );\n        }}\n      </RootContext.Consumer>\n    );\n  }\n}\n\nexport default BalanceInquiry;\n","import React, { useContext, useState } from \"react\";\nimport { RootContext } from \"../../App\";\nimport \"./AddTransaction.css\";\n\nconst AddTransaction = () => {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const state = useContext(RootContext);\n  // nested array destructuring with default values\n  const {\n    transaction: [allTransactions = [], setAllTransaction = {}],\n    income: [totalIncome, setTotalIncome],\n    expense: [totalExpense, setTotalExpense],\n  } = state;\n\n  // methods\n  const onAddTransaction = () => {\n    let transaction = {};\n    // if (allTransactions && allTransactions.length > 0) {\n    transaction = {\n      _id:\n        allTransactions.length > 0\n          ? allTransactions[allTransactions.length - 1]._id + 1\n          : 1,\n      name: text,\n      value: amount,\n    };\n    // }\n    let payload = [...allTransactions, transaction];\n    setAllTransaction(payload);\n    // set into local Storage\n    localStorage.setItem(\"allTransactions\", JSON.stringify(payload));\n    updateIncomeExpense();\n    setText(\"\");\n    setAmount(\"\");\n  };\n\n  const updateIncomeExpense = () => {\n    if (amount > 0) {\n      setTotalIncome(totalIncome + parseFloat(amount));\n    } else {\n      setTotalExpense(totalExpense + parseFloat(amount));\n    }\n  };\n\n  return (\n    <div className=\"container \">\n      <p className=\"bold\">Add new transaction</p>\n      <p className=\"hr\" />\n\n      <div>\n        <p>Text</p>\n        <input\n          type=\"text\"\n          className=\"input\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n\n      <div>\n        <div className=\"MV10\">\n          <span>Amount</span>\n          <br />\n          <span>(negative-expense,positive-income)</span>\n        </div>\n\n        <input\n          className=\"input\"\n          type=\"number\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n        />\n      </div>\n\n      <button id=\"add-t-btn\" onClick={onAddTransaction}>\n        Add Transaction\n      </button>\n    </div>\n  );\n};\n\nexport default AddTransaction;\n","import React, { useContext, useEffect } from \"react\";\nimport { RootContext } from \"../../App\";\nimport \"./TransactionHistory.css\";\n\nconst TransactionHistory = () => {\n  const state = useContext(RootContext);\n  // nested array destructuring with default values\n  const {\n    transaction: [allTransactions = [], setAllTransaction = []],\n  } = state;\n\n  const TransactionCard = (props) => {\n    let { _id, name, value } = props;\n    let splitedValue = JSON.stringify(value).split(\"-\");\n    return (\n      <div id=\"t-card\" className={value < 0 ? \"red-border\" : \"green-border\"}>\n        <p className=\"card-item\">\n          {_id}. {name}\n        </p>\n        <p className=\"card-item\">\n          {splitedValue.length > 1\n            ? `-$${parseFloat(splitedValue[1])}`\n            : `$${value}`}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <p className=\"bold\">History</p>\n      <p className=\"hr\" />\n\n      {/* rendering transaction items here with name and value */}\n      <div>\n        {allTransactions &&\n          allTransactions.length > 0 &&\n          allTransactions.map((_transaction) => (\n            <TransactionCard key={_transaction._id} {..._transaction} />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TransactionHistory;\n","import { useContext } from \"react\";\nimport { RootContext } from \"../../App\";\nimport \"./IncomeExpenseCard.css\";\n\n/*\n context using in functional component\n */\nconst IncomeExpenseCard = () => {\n  const state = useContext(RootContext);\n  // nested array destructuring with default values\n  const {\n    income: [totalIncome = 0, setTotalIncome = {}],\n    expense: [totalExpense = 0, setTotalExpense = {}],\n  } = state;\n\n  return (\n    <div className=\"container\">\n      <div id=\"card\">\n        <div className=\"cardItem\">\n          <p>INCOME</p>\n          <p id=\"income\">{totalIncome}</p>\n        </div>\n        <p id=\"v-line\" />\n        <div className=\"cardItem\">\n          <p>EXPENSE</p>\n          <p id=\"expense\">{totalExpense}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default IncomeExpenseCard;\n","import { useState, createContext, useEffect } from \"react\";\nimport BalanceInquiry from \"./components/BalanceInquiry/BalanceInquiry\";\nimport AddTransaction from \"./containers/AddTransaction/AddTransaction\";\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\nimport IncomeExpenseCard from \"./components/IncomeExpenseCard/IncomeExpenseCard\";\nimport \"./App.css\";\n\nexport const RootContext = createContext();\n\nexport default function App() {\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalExpense, setTotalExpense] = useState(0);\n  const [allTransactions, setAllTransaction] = useState([]);\n\n  useEffect(() => {\n    let _allTransactions = JSON.parse(localStorage.getItem(\"allTransactions\"));\n    if (_allTransactions && _allTransactions.length > 0) {\n      setAllTransaction(_allTransactions);\n      let income = 0;\n      let expense = 0;\n      _allTransactions.map((item) => {\n        if (item.value > 0) {\n          income += JSON.parse(item.value);\n        } else {\n          expense += JSON.parse(item.value);\n        }\n      });\n      setTotalIncome(income);\n      setTotalExpense(expense);\n    }\n    return () => {\n      // cleanup;\n    };\n  }, []);\n\n  return (\n    <RootContext.Provider\n      value={{\n        income: [totalIncome, setTotalIncome],\n        expense: [totalExpense, setTotalExpense],\n        transaction: [allTransactions, setAllTransaction],\n      }}\n    >\n      <div id=\"content\">\n        <p id=\"title\">Expense Tracker</p>\n        <BalanceInquiry />\n        <IncomeExpenseCard />\n        <TransactionHistory />\n        <AddTransaction />\n      </div>\n    </RootContext.Provider>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { debugContextDevtool } from \"react-context-devtool\";\n\nconst container = document.getElementById(\"root\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  container\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// configure react context devtool for development\nlet options = {\n  debugReducer: true, //by default true\n  debugContext: true, //by default true\n};\n\ndebugContextDevtool(container, options);\n"],"sourceRoot":""}